#
#  Copyright (c) 2015, Otto-von-Guericke-Universität Magdeburg (OVGU)
#
#  Authors:	André Keuns		<andre.keuns@st.ovgu.de>
#			Marcus Viererbe	<marcus.viererbe@st.ovgu.de>
#
#  All rights reserved
#
#  This script free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  The GNU General Public License can be found at
#  http://www.gnu.org/copyleft/gpl.html.
#
#  This script is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  This copyright notice MUST APPEAR in all copies of the script!
#  Thanks for all inspirations.
#

##########################################################################
#				script for ATMEL sam3s4[abc], a CORTEX-M3 chip
##########################################################################

if { [info exists CHIPNAME] } {
   set _CHIPNAME $CHIPNAME
} else {
   set _CHIPNAME sam3s4
}

if { [info exists ENDIAN] } {
   set _ENDIAN $ENDIAN
} else {
   set _ENDIAN little
}

# JTAG speed should be <= F_CPU/6. F_CPU after reset is 4 MHz, so use F_JTAG = 0.5MHz
#
# Since we may be running of an RC oscilator, we crank down the speed a
# bit more to be on the safe side. Perhaps superstition, but if are
# running off a crystal, we can run closer to the limit. Note
# that there can be a pretty wide band where things are more or less stable.

adapter_khz 500

adapter_nsrst_delay 100
jtag_ntrst_delay 100

#jtag scan chain
if { [info exists CPUTAPID] } {
   set _CPUTAPID $CPUTAPID
} else {
   set _CPUTAPID 0x4ba00477
}

jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -endian $_ENDIAN -chain-position $_TARGETNAME

# 49152 Byte = 48KB (The ATSAM3S4 has 256-Kbyte internal Flash and 48 Kbytes high-speed SRAM)
$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size 49152 -work-area-backup 0

$_TARGETNAME configure -event gdb-flash-erase-start {
    halt
}

# if srst is not fitted use SYSRESETREQ to
# perform a soft reset
cortex_m reset_config sysresetreq

# ist nicht der Dateiname, sondern nur ein Namens-Ident.
set _FLASHNAME $_CHIPNAME.flash

# Config Command: flash bank name driver base size chip_width bus_width target [driver_options]
# driver name is at91sam3 (best match)

flash bank $_FLASHNAME at91sam3 0x00400000 0 1 1 $_TARGETNAME

$_TARGETNAME configure -event gdb-attach { reset init }

proc sflash () {
	reset halt
	flash write_bank 0 basic-shell.deRFsam3-23M10-2.bin 0
	verify_image basic-shell.deRFsam3-23M10-2.bin
	poll
}
